/* src/config.h.in.  Generated from configure.ac by autoheader.  */


#ifndef CONFIG_H_
#define CONFIG_H_


/* Defined if we are building for benchmarking */
#cmakedefine BENCHMARK_MODE

/* Build platform */
#define BUILD_BUILD_PLATFORM "${CMAKE_SYSTEM}"

/* Compiler */
#define BUILD_COMPILER "${CMAKE_CXX_COMPILER_NAMES} ${CMAKE_CXX_COMPILER_VERSION}"

/* Configure arguments */
#define BUILD_CONFIGURE_ARGS "None, built by cmake."

/* Build date */
#define BUILD_DATE "${BUILD_DATE}"

/* Build host */
#define BUILD_HOST "${BUILD_HOST}"

/* Host platform */
#define BUILD_HOST_PLATFORM "${CMAKE_HOST_SYSTEM}"

/* Target platform */
#define BUILD_TARGET_PLATFORM "${CMAKE_SYSTEM}"

/* Build user */
#define BUILD_USER "Null"

/* Define to 1 if the `closedir' function returns void instead of `int'. */
#cmakedefine CLOSEDIR_VOID 1

/* Define to 1 if translation of program messages to the user's native
   language is requested. */
#cmakedefine ENABLE_NLS 1

/* Flarq authors */
#cmakedefine FLARQ_AUTHORS "@FLARQ_AUTHORS@"

/* Flarq compiler flags */
#define FLARQ_BUILD_CXXFLAGS "${CMAKE_CXX_FLAGS}"

/* Flarq linker flags */
#define FLARQ_BUILD_LDFLAGS "${CMAKE_SHARED_LINKER_FLAGS}"

/* Flarq Docs index */
#cmakedefine FLARQ_DOCS "@FLARQ_DOCS@"

/* Flarq version string */
#define FLARQ_VERSION "${FLARQ_VERSION}"

/* Flarq major version number */
#define FLARQ_VERSION_MAJOR ${FLARQ_VERSION_MAJOR}

/* Flarq minor version number */
#define FLARQ_VERSION_MINOR ${FLARQ_VERSION_MINOR}

/* Flarq patch/alpha version string */
#define FLARQ_VERSION_PATCH "${FLARQ_VERSION_PATCH}"

/* Fldigi authors */
#cmakedefine FLDIGI_AUTHORS "@FLDIGI_AUTHORS@"

/* Fldigi compiler flags */
#define FLDIGI_BUILD_CXXFLAGS "${CMAKE_CXX_FLAGS}"

/* Fldigi linker flags */
#define FLDIGI_BUILD_LDFLAGS "${CMAKE_SHARED_LINKER_FLAGS}"

/* FLTK API major version */
#define FLDIGI_FLTK_API_MAJOR 1

/* FLTK API minor version */
#define FLDIGI_FLTK_API_MINOR 3

/* FLTK API patch */
#cmakedefine FLDIGI_FLTK_API_PATCH

/* Fldigi version string */
#cmakedefine FLDIGI_VERSION "@FLDIGI_VERSION@"

/* Fldigi major version number */
#cmakedefine FLDIGI_VERSION_MAJOR @FLDIGI_VERSION_MAJOR@

/* Fldigi minor version number */
#cmakedefine FLDIGI_VERSION_MINOR @FLDIGI_VERSION_MINOR@

/* Fldigi patch/alpha version string */
#cmakedefine FLDIGI_VERSION_PATCH "@FLDIGI_VERSION_PATCH@"

/* FLTK version */
#define FLTK_BUILD_VERSION "${FLTK_VERSION}"

/* hamlib version */
#define HAMLIB_BUILD_VERSION "${HAMLIB_VERSION}"

/* Define to 1 if you have the <arpa/inet.h> header file. */
#cmakedefine HAVE_ARPA_INET_H 1

/* Define to 1 if you have the MacOS X function CFLocaleCopyCurrent in the
   CoreFoundation framework. */
#cmakedefine HAVE_CFLOCALECOPYCURRENT 1

/* Define to 1 if you have the MacOS X function CFPreferencesCopyAppValue in
   the CoreFoundation framework. */
#cmakedefine HAVE_CFPREFERENCESCOPYAPPVALUE 1

/* Define to 1 if we have clock_gettime */
#cmakedefine HAVE_CLOCK_GETTIME 1

/* Define to 0 if not using dbg::stack */
#cmakedefine HAVE_DBG_STACK

/* Define if the GNU dcgettext() function is already present or preinstalled.
   */
#cmakedefine HAVE_DCGETTEXT

/* Define to 1 if you have the <dev/ppbus/ppi.h> header file. */
#cmakedefine HAVE_DEV_PPBUS_PPI_H 1

/* Define to 1 if we have dlopen */
#cmakedefine HAVE_DLOPEN 1

/* Define to 1 if you have the <execinfo.h> header file. */
#cmakedefine HAVE_EXECINFO_H 1

/* Define to 1 if you have the <fcntl.h> header file. */
#cmakedefine HAVE_FCNTL_H 1

/* Define to 1 if you have the `getaddrinfo' function. */
#cmakedefine HAVE_GETADDRINFO 1

/* Define to 1 if you have the `gethostbyname' function. */
#cmakedefine HAVE_GETHOSTBYNAME 1

/* Define if the GNU gettext() function is already present or preinstalled. */
#cmakedefine HAVE_GETTEXT 1

/* Define to 1 if you have the `gmtime_r' function. */
#cmakedefine HAVE_GMTIME_R 1

/* Define to 1 if you have the `hstrerror' function. */
#cmakedefine HAVE_HSTRERROR 1

/* Define if you have the iconv() function and it works. */
#cmakedefine HAVE_ICONV

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H 1

/* Define to 1 if you have the <limits.h> header file. */
#cmakedefine HAVE_LIMITS_H 1

/* Define to 1 if you have the <linux/ppdev.h> header file. */
#cmakedefine HAVE_LINUX_PPDEV_H 1

/* Define to 1 if you have the `localtime_r' function. */
#cmakedefine HAVE_LOCALTIME_R 1

/* Define to 1 if you have the `memmove' function. */
#cmakedefine HAVE_MEMMOVE 1

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H 1

/* Define to 1 if you have the `memset' function. */
#cmakedefine HAVE_MEMSET 1

/* Define to 1 if you have the `mkdir' function. */
#cmakedefine HAVE_MKDIR 1

/* Define to 1 if you have the <netdb.h> header file. */
#cmakedefine HAVE_NETDB_H 1

/* Define to 1 if you have the <netinet/in.h> header file. */
#cmakedefine HAVE_NETINET_IN_H 1

/* Define to 1 if you have O_CLOEXEC defined */
#cmakedefine HAVE_O_CLOEXEC 1

/* Define to 1 if you have the <regex.h> header file. */
#cmakedefine HAVE_REGEX_H 1

/* Define to 1 if you have the `select' function. */
#cmakedefine HAVE_SELECT 1

/* Define to 1 if we have sem_timedwait */
#cmakedefine HAVE_SEM_TIMEDWAIT 1

/* Define to 1 if we have sem_unlink */
#cmakedefine HAVE_SEM_UNLINK 1

/* Define to 1 if you have the `setenv' function. */
#cmakedefine HAVE_SETENV 1

/* Define to 1 if you have the `snprintf' function. */
#cmakedefine HAVE_SNPRINTF 1

/* Define to 1 if you have the `socket' function. */
#cmakedefine HAVE_SOCKET 1

/* Define to 1 if you have the `socketpair' function. */
#cmakedefine HAVE_SOCKETPAIR 1

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB_H 1

/* Define to 1 if we have std::bind in <functional> */
#cmakedefine HAVE_STD_BIND 1

/* Define to 0 if we do not have std::hash in <unordered_map> */
#cmakedefine HAVE_STD_HASH

/* Define to 1 if we have std::tr1::bind in <tr1/functional> */
#cmakedefine HAVE_STD_TR1_BIND 1

/* Define to 1 if we do not have std::tr1::hash in <tr1/unordered_map> */
#cmakedefine HAVE_STD_TR1_HASH 1

/* Define to 1 if you have the `strcasecmp' function. */
#cmakedefine HAVE_STRCASECMP 1

/* Define to 1 if you have the `strcasestr' function. */
#cmakedefine HAVE_STRCASESTR 1

/* Define to 1 if you have the `strchr' function. */
#cmakedefine HAVE_STRCHR 1

/* Define to 1 if you have the `strdup' function. */
#cmakedefine HAVE_STRDUP 1

/* Define to 1 if you have the `strerror' function. */
#cmakedefine HAVE_STRERROR 1

/* Define to 1 if you have the `strftime' function. */
#cmakedefine HAVE_STRFTIME 1

/* Define to 1 if you have the <strings.h> header file. */
#cmakedefine HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H 1

/* Define to 1 if you have the `strlcpy' function. */
#cmakedefine HAVE_STRLCPY 1

/* Define to 1 if you have the `strncasecmp' function. */
#cmakedefine HAVE_STRNCASECMP 1

/* Define to 1 if you have the `strrchr' function. */
#cmakedefine HAVE_STRRCHR 1

/* Define to 1 if you have the `strstr' function. */
#cmakedefine HAVE_STRSTR 1

/* Define to 1 if you have the `strtol' function. */
#cmakedefine HAVE_STRTOL 1

/* Define to 1 if you have the <sys/ioctl.h> header file. */
#cmakedefine HAVE_SYS_IOCTL_H 1

/* Define to 1 if you have the <sys/param.h> header file. */
#cmakedefine HAVE_SYS_PARAM_H 1

/* Define to 1 if you have the <sys/select.h> header file. */
#cmakedefine HAVE_SYS_SELECT_H 1

/* Define to 1 if you have the <sys/socket.h> header file. */
#cmakedefine HAVE_SYS_SOCKET_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/time.h> header file. */
#cmakedefine HAVE_SYS_TIME_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <sys/utsname.h> header file. */
#cmakedefine HAVE_SYS_UTSNAME_H 1

/* Define to 1 if you have the <termios.h> header file. */
#cmakedefine HAVE_TERMIOS_H 1

/* Define to 1 if you have the `uname' function. */
#cmakedefine HAVE_UNAME 1

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H 1

/* Define to 1 if you have the `unsetenv' function. */
#cmakedefine HAVE_UNSETENV 1

/* Define to 1 if you have the <values.h> header file. */
#cmakedefine HAVE_VALUES_H 1

/* Define to 1 if you have the `vsnprintf' function. */
#cmakedefine HAVE_VSNPRINTF 1

/* Define to 1 if the system has the type `_Bool'. */
#cmakedefine HAVE__BOOL 1

/* Name of package */
#cmakedefine PACKAGE "@PACKAGE@"

/* Define to the address where bug reports for this package should be sent. */
#cmakedefine PACKAGE_BUGREPORT "@PACKAGE_BUGREPORT@"

/* Download page */
#cmakedefine PACKAGE_DL "@PACKAGE_DL@"

/* Docs index */
#cmakedefine PACKAGE_DOCS "@PACKAGE_DOCS@"

/* Beginners guide */
#cmakedefine PACKAGE_GUIDE "@PACKAGE_GUIDE@"

/* Home page */
#cmakedefine PACKAGE_HOME "@PACKAGE_HOME@"

/* Define to the full name of this package. */
#cmakedefine PACKAGE_NAME "@PACKAGE_NAME@"

/* Trac new ticket page */
#cmakedefine PACKAGE_NEWBUG "@PACKAGE_NEWBUG@"

/* BerliOS page */
#cmakedefine PACKAGE_PROJ "@PACKAGE_PROJ@"

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING "@PACKAGE_STRING@"

/* Define to the one symbol short name of this package. */
#cmakedefine PACKAGE_TARNAME "@PACKAGE_TARNAME@"

/* Define to the home page for this package. */
#cmakedefine PACKAGE_URL "@PACKAGE_URL@"

/* Define to the version of this package. */
#cmakedefine PACKAGE_VERSION "@PACKAGE_VERSION@"

/* portaudio version */
#define PORTAUDIO_BUILD_VERSION "${PORTAUDIO_VERSION}"

/* pulseaudio version */
#define PULSEAUDIO_BUILD_VERSION "${PULSEAUDIO_VERSION}"

/* Define as the return type of signal handlers (`int' or `void'). */
#cmakedefine RETSIGTYPE "@RETSIGTYPE@"

/* samplerate version */
#define SAMPLERATE_BUILD_VERSION "${SAMPLERATE_VERSION}"

/* Define to the type of arg 1 for `select'. */
#cmakedefine SELECT_TYPE_ARG1 "@SELECT_TYPE_ARG1@"

/* Define to the type of args 2, 3 and 4 for `select'. */
#cmakedefine SELECT_TYPE_ARG234 "@SELECT_TYPE_ARG234@"

/* Define to the type of arg 5 for `select'. */
#cmakedefine SELECT_TYPE_ARG5 "@SELECT_TYPE_ARG5@"

/* sndfile version */
#define SNDFILE_BUILD_VERSION "${SNDFILE_VERSION}"

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS 1

/* Define to 1 if you can safely include both <sys/time.h> and <time.h>. */
#cmakedefine TIME_WITH_SYS_TIME 1

/* Define to 1 if your <sys/time.h> declares `struct tm'. */
#cmakedefine TM_IN_SYS_TIME 1

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable threading extensions on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif


/* Defined if we are using TLS */
#cmakedefine USE_TLS

/* Define to 1 if we are using x */
#cmakedefine USE_X 1

/* Version number of package */
#cmakedefine VERSION "@VERSION@"

/* x version */
#cmakedefine X_BUILD_VERSION "@X_BUILD_VERSION@"

/* Define to 1 if on MINIX. */
#cmakedefine _MINIX 1

/* Define to 2 if the system does not provide POSIX.1 features except with
   this defined. */
#cmakedefine _POSIX_1_SOURCE

/* Define to 1 if you need to in order for `stat' and other things to work. */
#cmakedefine _POSIX_SOURCE 1

/* Define for Solaris 2.5.1 so the uint32_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT32_T

/* Define for Solaris 2.5.1 so the uint64_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT64_T

/* Define for Solaris 2.5.1 so the uint8_t typedef from <sys/synch.h>,
   <pthread.h>, or <semaphore.h> is not used. If the typedef were allowed, the
   #define below would cause a syntax error. */
#cmakedefine _UINT8_T

/* Define to 1 if we are building on cygwin or mingw */
#cmakedefine _WINDOWS

/* Define to 1 if we are building on cygwin or mingw */
#cmakedefine __MINGW32__

/* Define to 1 if we are building on cygwin or mingw */
#cmakedefine __WOE32__

/* Define to empty if `const' does not conform to ANSI C. */
#cmakedefine const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#cmakedefine inline
#endif

/* Define to the type of a signed integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int16_t

/* Define to the type of a signed integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int32_t

/* Define to the type of a signed integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine int64_t

/* Define to the type of a signed integer type of width exactly 8 bits if such
   a type exists and the standard includes do not define it. */
#cmakedefine int8_t

/* Define to the equivalent of the C99 'restrict' keyword, or to
   nothing if this is not supported.  Do not define if restrict is
   supported directly.  */
#cmakedefine restrict
/* Work around a bug in Sun C++: it does not support _Restrict or
   __restrict__, even though the corresponding Sun C compiler ends up with
   "#define restrict _Restrict" or "#define restrict __restrict__" in the
   previous line.  Perhaps some future version of Sun C++ will work with
   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */
#if defined __SUNPRO_CC && !defined __RESTRICT
# define _Restrict
# define __restrict__
#endif

/* Define to `unsigned int' if <sys/types.h> does not define. */
#cmakedefine size_t

/* Define to the type of an unsigned integer type of width exactly 16 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint16_t

/* Define to the type of an unsigned integer type of width exactly 32 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint32_t

/* Define to the type of an unsigned integer type of width exactly 64 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint64_t

/* Define to the type of an unsigned integer type of width exactly 8 bits if
   such a type exists and the standard includes do not define it. */
#cmakedefine uint8_t

/* Define to empty if the keyword `volatile' does not work. Warning: valid
   code using `volatile' can become incorrect without. Disable with care. */
#cmakedefine volatile


#include "pkg.h"
#include "util.h"
#endif /* CONFIG_H_ */

